/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/api-func.js":
/*!*************************!*\
  !*** ./src/api-func.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"apiData\": () => (/* binding */ apiData),\n/* harmony export */   \"changeWeather\": () => (/* binding */ changeWeather)\n/* harmony export */ });\n/* harmony import */ var _dom_manip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-manip */ \"./src/dom-manip.js\");\n\nasync function changeWeather(initCity = '') {\n    const inputCityName = initCity || document.querySelector('.city-name').value;\n    if (inputCityName == '') { return }\n    const weatherApiData = await getApiData(inputCityName.trim());\n    const errorNode = document.querySelector('.error-block');\n    errorNode.classList.add('hidden');\n    if (Number(weatherApiData.cod) !== 200) {\n        errorNode.classList.remove('hidden');\n        return\n    }\n\n    function getCityName() {\n        return weatherApiData.city.name + ', ' + weatherApiData.city.country;\n    }\n    function getWeatherCode() {\n        return weatherApiData.list[0].weather[0].id;\n    }\n    function getWeatherDescription() {\n        return weatherApiData.list[0].weather[0].description;\n    }\n    function getCurrentTemp() {\n        const tempNowKelvin = weatherApiData.list[0].main.temp;\n        const tempNowCelsius = Math.round((Number(tempNowKelvin) - 273.15) * 10) / 10;\n        return tempNowCelsius;\n    }\n    function getCurrentFeelsTemp() {\n        const tempFeelsNowKelvin = weatherApiData.list[0].main.feels_like;\n        const tempFeelsNowCelsius = Math.round((Number(tempFeelsNowKelvin) - 273.15) * 10) / 10;\n        return tempFeelsNowCelsius;\n    }\n    function getChanceOfRain() {\n        return weatherApiData.list[0].pop * 100;\n    }\n    function getHumidity() {\n        return weatherApiData.list[0].main.humidity;\n    }\n    function getWindSpeed() {\n        const windSpeedNowMeterPerSecond = weatherApiData.list[0].wind.speed;\n        const windSpeedNowKPH = Math.round((Number(windSpeedNowMeterPerSecond) * 3.6) * 10) / 10;\n        return windSpeedNowKPH;\n    }\n\n    const cityName = getCityName();\n    const weatherCode = getWeatherCode();\n    const weatherDesc = getWeatherDescription();\n    const tempValue = getCurrentTemp();\n    const windSpeed = getWindSpeed();\n    const feelsTempValue = getCurrentFeelsTemp();\n    const rainChance = getChanceOfRain();\n    const humidityPerc = getHumidity();\n\n    (0,_dom_manip__WEBPACK_IMPORTED_MODULE_0__.renderCurrenyWeather)(weatherCode,\n        cityName,\n        weatherDesc,\n        tempValue,\n        feelsTempValue,\n        rainChance,\n        humidityPerc,\n        windSpeed,\n    )\n    // sorts the data by day\n    const sortedData = weatherApiData.list.reduce((total, next) => {\n        total[next.dt_txt.split(' ')[0]] = total[next.dt_txt.split(' ')[0]] || [];\n        total[next.dt_txt.split(' ')[0]].push(next);\n        return total;\n    }, {})\n    // sorts the data by temp\n    for (const day in sortedData) {\n        sortedData[day].sort((a, b) => (a.main.temp - b.main.temp))\n    }\n    for (const day in sortedData) {\n        const sortedDataKeys = Object.keys(sortedData);\n        const dayIndex = sortedDataKeys.indexOf(day) + 1;\n\n        const minTemp = Math.round(sortedData[day][0].main.temp - 273.15);\n        const maxTemp = Math.round(sortedData[day][sortedData[day].length - 1].main.temp - 273.15);\n        const weatherCode = sortedData[day][0].weather[0].id;\n        const weatherDesc = sortedData[day][0].weather[0].description;\n        (0,_dom_manip__WEBPACK_IMPORTED_MODULE_0__.renderFutureWeather)(dayIndex,\n            day,\n            maxTemp,\n            minTemp,\n            weatherCode,\n            weatherDesc,\n        )\n    }\n\n    const unitChangeNode = document.querySelector('.change-unit');\n    if (unitChangeNode.classList.contains('imperial')) {\n        unitChangeNode.classList.remove('imperial');\n        (0,_dom_manip__WEBPACK_IMPORTED_MODULE_0__.changeUnit)()\n    }\n}\n\nconst apiData = (function apiData() {\n    const cityName = document.querySelector('.city-name').value;\n    let weatherApiData;\n\n    function setApiData() {\n        const ApiData = getApiData(cityName);\n        ApiData.then((apiData) => {\n            weatherApiData = apiData\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n\n\n    function getCityName() {\n\n        return weatherApiData.city.name + ', ' + weatherApiData.city.country;\n    }\n    function getWeatherCode() {\n        return weatherApiData.list[0].weather[0].id;\n    }\n    function getWeatherDescription() {\n        return weatherApiData.list[0].weather[0].description;\n    }\n    function getCurrentTemp() {\n        const tempNowKelvin = weatherApiData.list[0].main.temp;\n        const tempNowCelsius = Math.round((Number(tempNowKelvin) - 273.15) * 10) / 10;\n        return tempNowCelsius;\n    }\n    function getCurrentFeelsTemp() {\n        const tempFeelsNowKelvin = weatherApiData.list[0].main.feels_like;\n        const tempFeelsNowCelsius = Math.round((Number(tempFeelsNowKelvin) - 273.15) * 10) / 10;\n        return tempFeelsNowCelsius;\n    }\n    function getChanceOfRain() {\n        return weatherApiData.list[0].pop * 100;\n    }\n    function getHumidity() {\n        return weatherApiData.list[0].main.humidity;\n    }\n    function getWindSpeed() {\n        const windSpeedNowMeterPerSecond = weatherApiData.list[0].wind.speed;\n        const windSpeedNowKPH = Math.round((Number(windSpeedNowMeterPerSecond) * 3.6) * 10) / 10;\n        return windSpeedNowKPH;\n    }\n    return {\n        setApiData,\n        getCityName,\n        getWeatherCode,\n        getWeatherDescription,\n        getCurrentTemp,\n        getCurrentFeelsTemp,\n        getChanceOfRain,\n        getHumidity,\n        getWindSpeed,\n    }\n}())\n\nasync function getApiData(cityName) {\n    try {\n        const url = 'api.openweathermap.org';\n        const response = await fetch(`https://${url}/data/2.5/forecast?q=${cityName}&APPID=9dbacf94042384bcf9011370349c98d3`);\n        const weatherData = await response.json();\n        return weatherData;\n    } catch (error) {\n        console.log('getApiData catch');\n        console.log(error);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/api-func.js\n");

/***/ }),

/***/ "./src/dom-manip.js":
/*!**************************!*\
  !*** ./src/dom-manip.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"renderCurrenyWeather\": () => (/* binding */ renderCurrenyWeather),\n/* harmony export */   \"renderFutureWeather\": () => (/* binding */ renderFutureWeather),\n/* harmony export */   \"changeUnit\": () => (/* binding */ changeUnit)\n/* harmony export */ });\nfunction renderCurrenyWeather(weatherCode, cityName, weatherDesc, tempValue, feelsTempValue, rainChance, humidityPerc, windSpeed) {\n    const cityNameNode = document.querySelector('.current-result__city-name');\n    cityNameNode.textContent = cityName;\n\n    const weatherImg = document.querySelector('.weather-img');\n    if (weatherCode >= 200 && weatherCode < 300) {\n        weatherImg.src = './img/thunderstorm.svg'\n    } else if (weatherCode >= 300 && weatherCode < 600) {\n        weatherImg.src = './img/rain.svg'\n    } else if (weatherCode >= 600 && weatherCode < 700) {\n        weatherImg.src = './img/snow.svg'\n    } else if (weatherCode >= 700 && weatherCode < 800) {\n        weatherImg.src = './img/mist.svg'\n    } else if (weatherCode === 800) {\n        weatherImg.src = './img/sun.svg'\n    } else { weatherImg.src = './img/clouds.svg' }\n    const weatherDescNode = document.querySelector('.current-result__weather-description');\n    weatherDescNode.textContent = weatherDesc;\n\n    const tempNode = document.querySelector('.temp-value');\n    tempNode.textContent = tempValue;\n\n    const feelsTempNode = document.querySelector('.feels-like-value');\n    feelsTempNode.textContent = feelsTempValue;\n\n    const rainNode = document.querySelector('.rain-chance-value');\n    rainNode.textContent = rainChance;\n\n    const humidityNode = document.querySelector('.humidity-value');\n    humidityNode.textContent = humidityPerc;\n\n    const windSpeedNode = document.querySelector('.wind-speed-value');\n    windSpeedNode.textContent = windSpeed;\n}\n\nfunction renderFutureWeather(dayIndex, dayDate, maxTemp, minTemp, weatherCode, weatherDesc) {\n    const dayNode = document.querySelector(`.forecast-weather>div:nth-child(${dayIndex})`);\n\n    const dayNameNode = dayNode.querySelector('.day-name');\n    const splittedDay = dayDate.split('-');\n    const d = new Date(Number(splittedDay[0]), Number(splittedDay[1]), Number(splittedDay[2]));\n    if (d.getDay() === 0) {\n        dayNameNode.textContent = 'Sunday';\n    } else if (d.getDay() === 1) {\n        dayNameNode.textContent = 'Monday';\n    } else if (d.getDay() === 2) {\n        dayNameNode.textContent = 'Tuesday';\n    } else if (d.getDay() === 3) {\n        dayNameNode.textContent = 'Wednesday';\n    } else if (d.getDay() === 4) {\n        dayNameNode.textContent = 'Thursday';\n    } else if (d.getDay() === 5) {\n        dayNameNode.textContent = 'Friday';\n    } else {\n        dayNameNode.textContent = 'Saturday';\n    }\n\n    const maxTempNode = dayNode.querySelector('.max-temp-value');\n    maxTempNode.textContent = maxTemp;\n\n    const minTempNode = dayNode.querySelector('.min-temp-value');\n    minTempNode.textContent = minTemp;\n\n    const forecastDayImg = dayNode.querySelector('.forecast-day-img');\n    if (weatherCode >= 200 && weatherCode < 300) {\n        forecastDayImg.src = './img/thunderstorm.svg'\n    } else if (weatherCode >= 300 && weatherCode < 600) {\n        forecastDayImg.src = './img/rain.svg'\n    } else if (weatherCode >= 600 && weatherCode < 700) {\n        forecastDayImg.src = './img/snow.svg'\n    } else if (weatherCode >= 700 && weatherCode < 800) {\n        forecastDayImg.src = './img/mist.svg'\n    } else if (weatherCode === 800) {\n        forecastDayImg.src = './img/sun.svg'\n    } else { forecastDayImg.src = './img/clouds.svg' }\n\n    const weatherDescriptionNode = dayNode.querySelector('.weather-forecast-description');\n    weatherDescriptionNode.textContent = weatherDesc;\n}\nfunction changeUnit() {\n    const unitNode = document.querySelector('.change-unit');\n    const unitSymbol = document.querySelectorAll('.unit-symbol');\n    const unitName = document.querySelector('.unit-name');\n    if (unitNode.classList.contains('imperial')) {\n        unitNode.classList.remove('imperial');\n        unitName.textContent = 'Metric';\n\n        const windSpeedUnit = document.querySelector('.wind-speed-unit');\n        windSpeedUnit.textContent = 'km/h';\n        const windSpeedValue = document.querySelector('.wind-speed-value');\n        windSpeedValue.textContent = Math.round(windSpeedValue.textContent * 16.1) / 10\n\n\n        unitSymbol.forEach((unit) => {\n            unit.textContent = '°C';\n        })\n        const forecastDays = document.querySelectorAll('.forecast-day');\n        forecastDays.forEach((day) => {\n            const currentValue = day.querySelector('.unit-value').textContent;\n            day.querySelector('.unit-value').textContent = Math.round((currentValue - 32) * 5 / 9)\n        })\n        const currentWeather = document.querySelector('.current-weather');\n        currentWeather.querySelectorAll('.unit-value').forEach((value) => {\n            const currentValue = value.textContent;\n            value.textContent = Math.round(((currentValue - 32) * 5 / 9) * 10) / 10;\n        })\n\n    } else {\n        unitNode.classList.add('imperial');\n        unitName.textContent = 'Imperial';\n\n        const windSpeedUnit = document.querySelector('.wind-speed-unit');\n        const windSpeedValue = document.querySelector('.wind-speed-value');\n        windSpeedValue.textContent = Math.round(windSpeedValue.textContent * 6.2) / 10\n\n        windSpeedUnit.textContent = 'mph';\n        unitSymbol.forEach((unit) => {\n            unit.textContent = '°F';\n        })\n        const forecastDays = document.querySelectorAll('.forecast-day');\n        forecastDays.forEach((day) => {\n            const currentValue = day.querySelector('.unit-value').textContent;\n            day.querySelector('.unit-value').textContent = Math.round((currentValue * 9 / 5) + 32)\n        })\n        const currentWeather = document.querySelector('.current-weather');\n        currentWeather.querySelectorAll('.unit-value').forEach((value) => {\n            const currentValue = value.textContent;\n            value.textContent = Math.round(((currentValue * 9 / 5) + 32) * 10) / 10;\n        })\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/dom-manip.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dom_manip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-manip */ \"./src/dom-manip.js\");\n/* harmony import */ var _api_func__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api-func */ \"./src/api-func.js\");\n\n\nconst searchButton = document.querySelector('button');\nconst cityInput = document.querySelector('.city-name');\nsearchButton.addEventListener('click', () => {\n\t(0,_api_func__WEBPACK_IMPORTED_MODULE_1__.changeWeather)()\n});\ncityInput.addEventListener('keyup', (e) => {\n\tif (e.keyCode === 13) {\n\t\t(0,_api_func__WEBPACK_IMPORTED_MODULE_1__.changeWeather)();\n\t}\n})\nconst unitChange = document.querySelector('.change-unit');\nunitChange.addEventListener('click', _dom_manip__WEBPACK_IMPORTED_MODULE_0__.changeUnit)\nfunction init() {\n\t;(0,_api_func__WEBPACK_IMPORTED_MODULE_1__.changeWeather)('Tel aviv');\n}\ninit()\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQXlDO0FBQ0U7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3REFBYTtBQUNkLENBQUM7QUFDRDtBQUNBO0FBQ0EsRUFBRSx3REFBYTtBQUNmO0FBQ0EsQ0FBQztBQUNEO0FBQ0EscUNBQXFDLGtEQUFVO0FBQy9DO0FBQ0EsQ0FBQyx5REFBYTtBQUNkO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNoYW5nZVVuaXQgfSBmcm9tIFwiLi9kb20tbWFuaXBcIjtcbmltcG9ydCB7IGNoYW5nZVdlYXRoZXIgfSBmcm9tIFwiLi9hcGktZnVuY1wiO1xuY29uc3Qgc2VhcmNoQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYnV0dG9uJyk7XG5jb25zdCBjaXR5SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2l0eS1uYW1lJyk7XG5zZWFyY2hCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG5cdGNoYW5nZVdlYXRoZXIoKVxufSk7XG5jaXR5SW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCAoZSkgPT4ge1xuXHRpZiAoZS5rZXlDb2RlID09PSAxMykge1xuXHRcdGNoYW5nZVdlYXRoZXIoKTtcblx0fVxufSlcbmNvbnN0IHVuaXRDaGFuZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2hhbmdlLXVuaXQnKTtcbnVuaXRDaGFuZ2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjaGFuZ2VVbml0KVxuZnVuY3Rpb24gaW5pdCgpIHtcblx0Y2hhbmdlV2VhdGhlcignVGVsIGF2aXYnKTtcbn1cbmluaXQoKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;